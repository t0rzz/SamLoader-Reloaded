name: Build GUI

on:
  push:
    branches: [ "master" ]
    paths:
      - 'samloader/gui.py'
      - 'samloader/__init__.py'
      - 'samloader/versionfetch.py'
      - 'samloader/fusclient.py'
      - 'samloader/crypt.py'
      - 'samloader/imei.py'
      - 'samloader/main.py'
      - 'samloader/request.py'
      - 'samloader/regions.py'
      - 'samloader/data/**'
      - 'setup.py'
      - '.github/workflows/build.yml'

permissions:
  contents: write

jobs:
  build-windows-gui:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # we need tags and full history for tagging

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            setup.py

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install . pyinstaller build wheel

      - name: Get version
        id: getver
        run: |
          $ver = python -c "import samloader; print(samloader.__version__)"
          echo "ver=$ver" >> $env:GITHUB_OUTPUT

      - name: Compute tag name
        id: tagvars
        run: |
          echo "tag=v${{ steps.getver.outputs.ver }}" >> $env:GITHUB_OUTPUT

      - name: Check if tag exists (remote)
        id: checktag
        shell: bash
        run: |
          set -e
          git fetch --tags --quiet
          TAG="v${{ steps.getver.outputs.ver }}"
          if git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            # Check remote in case of shallow clone
            if git ls-remote --tags origin | grep -q "refs/tags/$TAG$"; then
              echo "exists=true" >> "$GITHUB_OUTPUT"
            else
              echo "exists=false" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Create and push tag
        if: steps.checktag.outputs.exists != 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag -a "v${{ steps.getver.outputs.ver }}" -m "Release v${{ steps.getver.outputs.ver }}"
          git push https://x-access-token:${{ secrets.T0RZZ_TOKEN }}@github.com/${{ github.repository }}.git "refs/tags/v${{ steps.getver.outputs.ver }}"

      - name: Build GUI exe
        run: |
          pyinstaller --noconfirm --onefile --windowed -n samloader-gui --collect-data certifi --collect-all PyQt6 --add-data "samloader\data\regions.json;samloader\data" samloader\gui.py
      - name: Build CLI exe
        run: |
          pyinstaller --noconfirm --onefile --console -n samloader-cli samloader\__main__.py
      - name: Build sdist/wheel
        run: |
          python -m build --sdist --wheel

      - name: Upload artifacts (backup)
        uses: actions/upload-artifact@v4
        with:
          name: samloader-${{ steps.getver.outputs.ver }}-win-artifacts
          path: |
            dist/samloader-gui.exe
            dist/samloader-cli.exe
            dist/*.whl
            dist/*.tar.gz

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tagvars.outputs.tag }}
          name: "SamLoader ${{ steps.getver.outputs.ver }}"
          generate_release_notes: true
          body: |
            Assets naming guide:
            - samloader-gui.exe: Windows GUI (PyQt6) binary
            - samloader-cli.exe: Windows CLI binary
            - samloader-gui-linux / samloader-cli-linux: Linux GUI/CLI binaries (see Linux job uploads)
            - samloader-gui-macos / samloader-cli-macos: macOS GUI/CLI binaries (see macOS job uploads)
            - samloader-<version>-py3-none-any.whl: Python wheel (pip installable package)
            - samloader-<version>.tar.gz: Python source distribution
            - *.apk: Android (Duofrost) debug builds
            - Duofrost-unsigned.ipa: iOS unsigned IPA for side-loading (requires signing on device)
            - duofrost-ios-frameworks/*.zip: iOS frameworks (unsigned)
          files: |
            dist/samloader-gui.exe
            dist/samloader-cli.exe
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.T0RZZ_TOKEN != '' && secrets.T0RZZ_TOKEN || secrets.GITHUB_TOKEN }}
# Existing jobs retained above

  build-linux:
    needs: build-windows-gui
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            setup.py
      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install . pyinstaller build wheel
      - name: Get version
        id: getver
        run: |
          echo "ver=$(python -c 'import samloader; print(samloader.__version__)')" >> $GITHUB_OUTPUT
      - name: Build GUI binary (Linux)
        run: |
          pyinstaller --noconfirm --onefile --windowed -n samloader-gui --collect-data certifi --collect-all PyQt6 --add-data "samloader/data/regions.json:samloader/data" samloader/gui.py
      - name: Build CLI binary (Linux)
        run: |
          pyinstaller --noconfirm --onefile --console -n samloader-cli samloader/__main__.py
      - name: Build sdist/wheel
        run: |
          python -m build --sdist --wheel
      - name: Upload artifacts (backup)
        uses: actions/upload-artifact@v4
        with:
          name: samloader-${{ steps.getver.outputs.ver }}-linux-artifacts
          path: |
            dist/samloader-gui
            dist/samloader-cli
            dist/*.whl
            dist/*.tar.gz
      - name: Rename Linux artifacts for clarity
        run: |
          mv dist/samloader-gui dist/samloader-gui-linux
          mv dist/samloader-cli dist/samloader-cli-linux
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.getver.outputs.ver }}
          append_body: true
          files: |
            dist/samloader-gui-linux
            dist/samloader-cli-linux
        env:
          GITHUB_TOKEN: ${{ secrets.T0RZZ_TOKEN != '' && secrets.T0RZZ_TOKEN || secrets.GITHUB_TOKEN }}

  build-macos:
    needs: build-windows-gui
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            setup.py
      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install . pyinstaller build wheel
      - name: Get version
        id: getver
        run: |
          echo "ver=$(python -c 'import samloader; print(samloader.__version__)')" >> $GITHUB_OUTPUT
      - name: Build GUI binary (macOS)
        run: |
          pyinstaller --noconfirm --onefile --windowed -n samloader-gui --collect-data certifi --collect-all PyQt6 --add-data "samloader/data/regions.json:samloader/data" samloader/gui.py
      - name: Build CLI binary (macOS)
        run: |
          pyinstaller --noconfirm --onefile --console -n samloader-cli samloader/__main__.py
      - name: Build sdist/wheel
        run: |
          python -m build --sdist --wheel
      - name: Upload artifacts (backup)
        uses: actions/upload-artifact@v4
        with:
          name: samloader-${{ steps.getver.outputs.ver }}-macos-artifacts
          path: |
            dist/samloader-gui
            dist/samloader-cli
            dist/*.whl
            dist/*.tar.gz
      - name: Rename macOS artifacts for clarity
        run: |
          mv dist/samloader-gui dist/samloader-gui-macos
          mv dist/samloader-cli dist/samloader-cli-macos
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.getver.outputs.ver }}
          append_body: true
          files: |
            dist/samloader-gui-macos
            dist/samloader-cli-macos
        env:
          GITHUB_TOKEN: ${{ secrets.T0RZZ_TOKEN != '' && secrets.T0RZZ_TOKEN || secrets.GITHUB_TOKEN }}
